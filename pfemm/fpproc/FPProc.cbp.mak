#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WRKDIR = $(CURDIR)

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -I../liblua -I../libfemm
CFLAGS = -Wall -fexceptions -fPIC
RESINC = 
LIBDIR = -L../liblua -L../libfemm
LIB = ../libfemm/libfemm.a ../liblua/liblua.a
LDFLAGS = 

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = $(WRKDIR)/obj/Debug
DEP_DEBUG = 
BINDIR_DEBUG = $(WRKDIR)/bin/Debug
OUT_DEBUG = $(BINDIR_DEBUG)/FPProc

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = $(WRKDIR)/obj/Release
DEP_RELEASE = 
BINDIR_RELEASE = $(WRKDIR)/bin/Release
OUT_RELEASE = $(BINDIR_RELEASE)/FPProc

INC_LIBRARY = $(INC)
CFLAGS_LIBRARY = $(CFLAGS) -O2
RESINC_LIBRARY = $(RESINC)
RCFLAGS_LIBRARY = $(RCFLAGS)
LIBDIR_LIBRARY = $(LIBDIR)
LIB_LIBRARY = $(LIB)
LDFLAGS_LIBRARY = $(LDFLAGS)
OBJDIR_LIBRARY = .objs
DEP_LIBRARY = 
OUT_LIBRARY = $(WRKDIR)/libfpproc.a

OBJ_DEBUG = $(OBJDIR_DEBUG)/fpproc.o $(OBJDIR_DEBUG)/main.o $(OBJDIR_DEBUG)/makemask.o $(OBJDIR_DEBUG)/problem.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/fpproc.o $(OBJDIR_RELEASE)/main.o $(OBJDIR_RELEASE)/makemask.o $(OBJDIR_RELEASE)/problem.o

OBJ_LIBRARY = $(OBJDIR_LIBRARY)/fpproc.o $(OBJDIR_LIBRARY)/makemask.o $(OBJDIR_LIBRARY)/problem.o

all: library

clean: clean_debug clean_release clean_library

before_debug: 
	test -d $(BINDIR_DEBUG) || mkdir -p $(BINDIR_DEBUG)
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/fpproc.o: fpproc.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c fpproc.cpp -o $(OBJDIR_DEBUG)/fpproc.o

$(OBJDIR_DEBUG)/main.o: main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main.cpp -o $(OBJDIR_DEBUG)/main.o

$(OBJDIR_DEBUG)/makemask.o: makemask.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c makemask.cpp -o $(OBJDIR_DEBUG)/makemask.o

$(OBJDIR_DEBUG)/problem.o: problem.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c problem.cpp -o $(OBJDIR_DEBUG)/problem.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf $(BINDIR_DEBUG)
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d $(BINDIR_RELEASE) || mkdir -p $(BINDIR_RELEASE)
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/fpproc.o: fpproc.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c fpproc.cpp -o $(OBJDIR_RELEASE)/fpproc.o

$(OBJDIR_RELEASE)/main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.o

$(OBJDIR_RELEASE)/makemask.o: makemask.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c makemask.cpp -o $(OBJDIR_RELEASE)/makemask.o

$(OBJDIR_RELEASE)/problem.o: problem.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c problem.cpp -o $(OBJDIR_RELEASE)/problem.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf $(BINDIR_RELEASE)
	rm -rf $(OBJDIR_RELEASE)

before_library: 
	test -d $(OBJDIR_LIBRARY) || mkdir -p $(OBJDIR_LIBRARY)

after_library: 

library: before_library out_library after_library

out_library: before_library $(OBJ_LIBRARY) $(DEP_LIBRARY)
	$(AR) rcs $(OUT_LIBRARY) $(OBJ_LIBRARY)

$(OBJDIR_LIBRARY)/fpproc.o: fpproc.cpp
	$(CXX) $(CFLAGS_LIBRARY) $(INC_LIBRARY) -c fpproc.cpp -o $(OBJDIR_LIBRARY)/fpproc.o

$(OBJDIR_LIBRARY)/makemask.o: makemask.cpp
	$(CXX) $(CFLAGS_LIBRARY) $(INC_LIBRARY) -c makemask.cpp -o $(OBJDIR_LIBRARY)/makemask.o

$(OBJDIR_LIBRARY)/problem.o: problem.cpp
	$(CXX) $(CFLAGS_LIBRARY) $(INC_LIBRARY) -c problem.cpp -o $(OBJDIR_LIBRARY)/problem.o

clean_library: 
	rm -f $(OBJ_LIBRARY) $(OUT_LIBRARY)
	rm -rf $(OBJDIR_LIBRARY)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release before_library after_library clean_library

